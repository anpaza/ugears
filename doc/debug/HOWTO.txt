To debug an STM32 system through JTAG or SWD interface:

    *   Launch the gdb debugging agent program (for example, st-util)
    *   Copy !gdbinit to .gdbinit into the directory from where you launch gdb
    *   Launch arm-none-eabi-gdb <your ARM executable>. When gdb will load .gdbinit,
        it should contact your debugging agent and connect the board.
    *   Run the 'load' command to load the program into flash memory
    *   Debug as usual

Additionaly, the !gdbinit template contains some useful macros to inspect hardware state.
Uncomment the respective lines from .gdbinit, for example, to examine GPIOA on STM32F0,
uncomment the line:

    p (GPIO_TypeDef *) 0x48000000

Now in GDB if you type "hw" it will execute this command. Then, to inspect the state
of GPIOA you will type something like:

    p /x $1

($2, $3 etc... replace with the respective expression number)
